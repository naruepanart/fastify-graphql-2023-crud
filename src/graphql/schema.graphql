scalar Date

directive @auth on OBJECT | FIELD_DEFINITION

type Query {
  posts(input: MainQuery): [Posts]
  post(input: MainQuery): Posts!

  users(input: MainQuery): [Users]
  user(input: MainQuery): Users!
}

type Mutation {
  register(input: RegisterInput): String
  login(input: LoginInput): Login!

  createPosts(input: PostsInput): String @auth
  updatePosts(input: PostsInput): String @auth
  removePosts(input: PostsInput): String @auth

  createUsers(input: UsersInput): String
  updateUsers(input: UsersInput): String @auth
  removeUsers(input: UsersInput): String @auth
}

type Login {
  atk: String
  def: String
}

input RegisterInput {
  name: String
  email: String
  password: String
  confirm_password: String
}

input LoginInput {
  email: String
  password: String
}

type Posts {
  _id: String
  title: String
  users: Users
  body: String
  country: Country
  created_at: Date
  updated_at: Date
}

input PostsInput {
  _id: String
  users: String
  title: String
  body: String
  country: String
}

type Country {
  _id: String
  name: String
}

type Users {
  _id: String
  name: String
  email: String
}

input UsersInput {
  _id: String
  name: String
}

input MainQuery {
  _id: String
  limit: Int
  page: Int
}
